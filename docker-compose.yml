
version: '3.3'
services:
  nginx:
    image: nginx:1.23.4
    container_name: ${APP_NAME}-nginx
    restart: unless-stopped
    tty: true
    ports:
      - "4027:80"
    volumes:
      - ./nginx/configs/conf.d/:/etc/nginx/conf.d/
      - ./nginx/configs/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - frontend
      - backend
      - postgres
    networks:
      - app-network
    env_file:
      - .env
  backend:
      build: ./backend
      container_name: ${APP_NAME}-backend
      restart: unless-stopped
      tty: true
      working_dir: /usr/app
      ports:
       - "4000:4000"
      volumes:
        - /app/node_modules
        - ./backend/src/:/app/
      depends_on:
        - postgres
      networks:
        - app-network
      env_file:
        - .env
  frontend:
      build: ./frontend
      container_name: ${APP_NAME}-frontend
      restart: unless-stopped
      tty: true
      working_dir: /usr/app
      ports:
       - "3000:3000"
      volumes:
        - /app/node_modules
        - ./frontend/src/:/app/
      depends_on:
        - backend
      networks:
        - app-network
      env_file:
        - .env
  postgres:
    image: postgres
    container_name: ${APP_NAME}-postgres
    restart: always
    environment:
      - POSTGRES_PASSWORD=fusion
      - POSTGRES_USER=abale
      - POSTGRES_DB=books
    volumes:
      - /var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network
    env_file:
      - .env

networks:
  app-network:
    driver: bridge



# version: '3.3'
# services:
#   nginx:
#     image: nginx:1.23.4
#     container_name: ${APP_NAME}-nginx
#     restart: unless-stopped
#     tty: true
#     ports:
#       - "4027:80"
#     volumes:
#       - ./nginx/configs/conf.d/:/etc/nginx/conf.d/
#       - ./nginx/configs/nginx.conf:/etc/nginx/nginx.conf
#     depends_on:
#       - frontend
#       - backend
#       - postgres
#     networks:
#       - app-network
#     env_file:
#       - .env
#   backend:
#       build: ./backend
#       container_name: ${APP_NAME}-backend
#       restart: unless-stopped
#       tty: true
#       working_dir: /usr/app
#       ports:
#        - "4000:4000"
#       volumes:
#         - /app/node_modules
#         - ./backend/src/:/app/
#       depends_on:
#         - postgres
#       networks:
#         - app-network
#       env_file:
#         - .env
#   frontend:
#       build: ./frontend
#       container_name: ${APP_NAME}-frontend
#       restart: unless-stopped
#       tty: true
#       working_dir: /usr/app
#       ports:
#        - "3000:3000"
#       volumes:
#         - /app/node_modules
#         - ./frontend/src/:/app/
#       depends_on:
#         - backend
#       networks:
#         - app-network
#       env_file:
#         - .env
#   postgres:
#     image: postgres
#     container_name: ${APP_NAME}-postgres
#     restart: always
#     environment:
#       - POSTGRES_PASSWORD=fusion
#       - POSTGRES_USER=abale
#       - POSTGRES_DB=books
#     volumes:
#       - /var/lib/postgresql/data
#     ports:
#       - "5432:5432"
#     networks:
#       - app-network
#     env_file:
#       - .env

# networks:
#   app-network:
#     driver: bridge